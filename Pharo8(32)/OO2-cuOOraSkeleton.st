Object subclass: #CuOOra	instanceVariableNames: 'usuarios'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!Object subclass: #CuentaUsuario	instanceVariableNames: 'nombre email preguntas respuestas votos'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!CuentaUsuario methodsFor: 'initialization' stamp: 'jp 11/20/2019 03:37'!initializepreguntas := OrderedCollection new.respuestas := OrderedCollection new.votos := OrderedCollection new.! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:09'!votarNegativamente:unaResp|v|v := Voto esPositivo: false autor: self.votos add: v.unaResp agregarVoto: v.! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 17:59'!crearRespuestaA: unaPreg conTexto:unTexto|resp|resp:= Respuesta A:unaPreg autor:self texto:unTexto.respuestas add: resp."no es necesaria para lo que pide el enunciado""unaPreg agregarRespuesta: resp. mejor en el inicializador de respuesta"^resp.! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:29'!crearPreguntaIG: texto|preg|preg:= PreguntaIG conTexto: texto autor: self.preguntas add: preg.^preg! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:46'!nombre:unNombre email:unEmailnombre:=unNombre. email:=unEmail.! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:07'!votarPositivamente:unaResp|v|v := Voto esPositivo: true autor: self.votos add: v.unaResp agregarVoto: v.! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 18:08'!preguntasRespondidas^preguntas select:[:p | p tieneRespuestasConAlMenosUnVotoPositivo].! !!CuentaUsuario methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:29'!crearPreguntaTecnica: texto|preg|preg:= PreguntaTecnica conTexto: texto autor: self.preguntas add: preg.^preg.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuentaUsuario class	instanceVariableNames: ''!!CuentaUsuario class methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:47'!nombre:unNombre email:unEmail^(self new) nombre:unNombre email:unEmail.! !Object subclass: #Post	instanceVariableNames: 'autor votos'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!Object subclass: #Pregunta	instanceVariableNames: 'texto autor respuestas'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!Pregunta methodsFor: 'initialization' stamp: 'jp 11/20/2019 04:00'!initializerespuestas := OrderedCollection new.! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:40'!tieneRespuestasConAlMenosUnVotoPositivo^ (respuestas anySatisfy: [ :r | r tieneAlMenosUnVotoPositivo ])! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:00'!agregarRespuesta: resprespuestas add: resp.! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:48'!conTexto:t autor:unAutortexto:=t. autor:=unAutor.! !!Pregunta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 18:10'!obtenerMejorRespuesta^self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pregunta class	instanceVariableNames: ''!!Pregunta class methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:48'!conTexto:t autor:unAutor^(self new) conTexto:t autor:unAutor! !Pregunta subclass: #PreguntaIG	instanceVariableNames: ''	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!PreguntaIG methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:57'!obtenerMejorRespuesta^ (respuestas detectMax: [ :r | r diffVotos ])! !!PreguntaIG methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:29'!obtenerMejorRespuesta2|max rMax|max:=0.rMax:= nil.respuestas do: [ :r | r diffVotos > max ifTrue:[	max:= r consenso.															 	rMax:= r.] ].^rMax! !Pregunta subclass: #PreguntaTecnica	instanceVariableNames: ''	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!PreguntaTecnica methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:57'!obtenerMejorRespuesta^ ( respuestas detectMax: [ :r | r consenso ] )! !!PreguntaTecnica methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:29'!obtenerMejorRespuesta2|max rMax|max:=0.rMax:= nil.respuestas do: [ :r | r consenso > max ifTrue:[	max:= r consenso.															 	rMax:= r.] ].^rMax! !Object subclass: #Respuesta	instanceVariableNames: 'texto autor pregunta votos'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!Respuesta methodsFor: 'initialization' stamp: 'jp 11/20/2019 04:08'!initialize votos:= OrderedCollection new.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:14'!diffVotos2^((self cantVotosPositivos) - (self cantVotosNegativos) )! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 17:58'!pregunta:unaPreg autor:unAutor texto:tpregunta:=unaPreg. autor:=unAutor. texto:=t.unaPreg agregarRespuesta: self.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:12'!diffVotos^((2 * self cantVotosPositivos) - (self cantVotos))! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:39'!tieneAlMenosUnVotoPositivo ^ (votos anySatisfy: [ :v | v esPositivo ])! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:07'!agregarVoto: unVotovotos add: unVoto.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:13'!cantVotosNegativos^(votos select:[:v|(v esPositivo) not]) size.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:13'!cantVotos^votos size.! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 18:14'!cantVotosPositivos^(votos select:[:v|v esPositivo]) size."votos count:[:v|v esPositivo]"! !!Respuesta methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 05:15'!consenso^(self cantVotosPositivos  / self cantVotos )! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Respuesta class	instanceVariableNames: ''!!Respuesta class methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:51'!A:unaPreg autor:unAutor texto:t^(self new) pregunta:unaPreg autor:unAutor texto:t! !Object subclass: #SistemaPyR	instanceVariableNames: 'usuarios'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!SistemaPyR commentStamp: 'jp 11/20/2019 05:08' prior: 0!|sys juan pedro p1 p2 r1 pepe marcos p3 p4 p5 r2 r3 r4| sys:= SistemaPyR new.pedro:= sys agregarUsuarioConNombre: 'Pedro' email: 'pepe@gmail.com'.juan:= sys agregarUsuarioConNombre: 'Juan' email: 'juanete@gmail.com'.pepe:= sys agregarUsuarioConNombre: 'pepe:' email: 'pepe@gmail.com'.marcos:= sys agregarUsuarioConNombre: 'marcos' email: 'marcos@gmail.com'.p1:= pedro crearPreguntaIG: '¿Cuales son las causas del cambio climático?'.r1:= juan crearRespuestaA: p1 conTexto: 'Los gases producido por la cria de ganado'.pedro votarPositivamente: r1.p2:= juan crearPreguntaTecnica: '¿Cómo se manejan las exepciones en Pharo?'.p3:= pedro crearPreguntaTecnica: '¿Casdharo?'.p4:= pepe crearPreguntaTecnica: '¿Cómodddpciones en Pharo?'.p5:= juan crearPreguntaTecnica: '¿Cósdaswwwro?'.r2:= juan crearRespuestaA: p1 conTexto: 'AAA'.r3:= marcos crearRespuestaA: p1 conTexto: 'BBB'.r4:= marcos crearRespuestaA: p1 conTexto: 'cCC'.juan votarNegativamente: r3.juan votarNegativamente: r3.juan votarNegativamente: r3.marcos votarNegativamente: r3.pedro votarPositivamente: r2.pedro votarPositivamente: r2.pedro votarPositivamente: r2.r1 tieneAlMenosUnVotoPositivo .p1 tieneRespuestasConAlMenosUnVotoPositivo .sys obtenerPreguntasYaRespondidas .r3 diffVotos. sys obtenerMejorRespuestaDe: p1.!!SistemaPyR methodsFor: 'initialization' stamp: 'jp 3/28/2020 00:54'!agregarUsuarioConNombre:unNombre email:unEmail|user|user:= CuentaUsuario nombre: unNombre email: unEmail.usuarios add: user.^user! !!SistemaPyR methodsFor: 'initialization' stamp: 'jp 11/20/2019 04:01'!initializeusuarios := OrderedCollection new.! !!SistemaPyR methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 18:07'!obtenerPreguntasYaRespondidas|pregResp|"pregResp:= usuarios flatCollect: [ :us | (us preguntas) select:[:p | p tieneRespuestasConAlMenosUnVotoPositivo  ] ]. pedir directamente las preguntas respondidas a usuario"pregResp:= usuarios flatCollect: [ :us | us preguntasRespondidas].^pregResp! !!SistemaPyR methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 04:46'!obtenerMejorRespuestaDe:unaPreg^(unaPreg obtenerMejorRespuesta)! !Object subclass: #Voto	instanceVariableNames: 'esPositivo autor fecha'	classVariableNames: ''	package: 'OO2-cuOOraSkeleton'!!Voto methodsFor: 'accessing' stamp: 'jp 11/20/2019 04:21'!esPositivo^esPositivo ! !!Voto methodsFor: 'initialization' stamp: 'jp 11/20/2019 03:45'!initializefecha:= Date today.! !!Voto methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:44'!esPositivo:p autor:unAutoresPositivo:=p.autor:=unAutor.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Voto class	instanceVariableNames: ''!!Voto class methodsFor: 'as yet unclassified' stamp: 'jp 11/20/2019 03:44'!esPositivo:p autor:unAutor^(self new) esPositivo:p autor:unAutor.! !